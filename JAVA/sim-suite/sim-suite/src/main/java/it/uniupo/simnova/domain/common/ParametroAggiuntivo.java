package it.uniupo.simnova.domain.common;

import lombok.Builder;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

/**
 * Classe che rappresenta un <strong>parametro aggiuntivo</strong> per uno scenario di simulazione.
 * Questa classe modella parametri personalizzati che possono essere aggiunti a specifici
 * tempi di uno scenario per arricchire la simulazione con dati extra (es. parametri vitali personalizzati, valori di laboratorio).
 *
 * @author Alessandro Zappatore
 * @version 1.0
 */
@Getter // Generates getters for all fields
@Setter // Generates setters for all non-final fields
@ToString // Generates a toString() method including all fields
public class ParametroAggiuntivo {
    /**
     * Unità di misura del parametro (es. "mmHg", "%").
     */
    private final String unitaMisura; // This field is final, so no setter will be generated by @Setter
    /**
     * Identificativo univoco del parametro, ID assegnato dal database.
     */
    private int id;
    /**
     * Identificativo del tempo a cui appartiene il parametro.
     */
    private int tempoId;
    /**
     * Identificativo dello scenario a cui appartiene il parametro.
     */
    private int scenarioId;
    /**
     * Nome del parametro (es. "Pressione venosa centrale", "Glicemia").
     */
    private String nome;
    /**
     * Valore del parametro, memorizzato come stringa (es. "12", "98.5").
     */
    private String valore;

    /**
     * Costruttore completo per creare un nuovo oggetto <strong><code>ParametroAggiuntivo</code></strong> con
     * tutti i dettagli, inclusi gli ID di tempo e scenario.
     * <p>
     * Using {@code @Builder} allows for a more readable and flexible way to
     * construct objects, especially when there are many parameters.
     *
     * @param id               Identificativo univoco del parametro.
     * @param tempoId          Identificativo del tempo a cui il parametro è associato.
     * @param scenarioId       Identificativo dello scenario a cui il parametro è associato.
     * @param nome             Il nome del parametro.
     * @param valore           Il valore del parametro, come stringa.
     * @param unitaMisura      L'unità di misura del parametro.
     */
    @Builder // Generates a builder for this constructor
    public ParametroAggiuntivo(int id, int tempoId, int scenarioId, String nome, String valore, String unitaMisura) {
        this.id = id;
        this.tempoId = tempoId;
        this.scenarioId = scenarioId;
        this.nome = nome;
        this.valore = valore;
        this.unitaMisura = unitaMisura;
    }

    /**
     * Costruttore semplificato per creare un nuovo oggetto <strong><code>ParametroAggiuntivo</code></strong>,
     * utile quando l'ID non è ancora noto (es. prima del salvataggio nel database).
     *
     * @param nome   Il nome del parametro.
     * @param valore Il valore del parametro, come numero. Verrà convertito in stringa.
     * @param unita  L'unità di misura del parametro.
     */
    public ParametroAggiuntivo(String nome, double valore, String unita) {
        this(0, 0, 0, nome, String.valueOf(valore), unita); // Calls the main constructor with default IDs
    }

    /**
     * Imposta il <strong>valore</strong> del parametro come numero.
     * Il valore numerico viene convertito in stringa per l'archiviazione.
     * Lombok does not generate this specific setter, so we keep it.
     *
     * @param valore The new numerical value of the parameter.
     */
    public void setValue(double valore) {
        this.valore = String.valueOf(valore);
    }

    // All other getters and setters are generated by @Getter and @Setter
    // The toString() method is generated by @ToString
}